only public,default,protected and private modifiers are allowed to create a constructor
if we declare private modifier to a constructor, then only one object is allowed and within that class only 
outside of the class we can't create
E.g single ton classes

super keyword is used to access super class instance variables
this keyword is used to access current class instance variables
Hence, super,this can't be used in static areas

super() or this() should be used only in constructors
also those should be first statement


Constructor overloading: is acceptable in JAVA
01.within a class we can write any number of constructors but they should be argumented
02.from one constructor to other constructor calling we can use "this()" keyword

Constructor inheritence and overriding:
these concepts are not applicable for constructors
Parent class constructors are not available to child class by default
so no inheritence is supported, hence overriding won't supported

every variable present in interface is always public static final
So constructor concept not applicable to interface

To perform initialization to a instance variable in abstract class,
we need constructor.. which required for child class

Three main cases

  